openapi: 3.0.0
x-stoplight:
  id: xan49ielb77h4
info:
  title: Template API
  version: '1.0'
  description: The Template API allows the management of templates withing RapidCX.
  contact:
    name: Colin Kirkham
    url: 'https://www.precisely.com'
    email: colin.kirkham@precisely.com
  license:
    name: Proprietary
    url: 'https://www.precisely.com'
servers:
  - url: 'http://localhost:8080'
    description: Development
paths:
  '/templates/{id}':
    get:
      operationId: get-template
      description: 'Get a single, existing template.'
      summary: Get Template
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/TenantID'
    delete:
      operationId: delete-template
      description: 'Delete a single, existing template.'
      summary: Delete Template
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/TenantID'
    parameters:
      - schema:
          type: integer
          format: int64
        name: id
        in: path
        required: true
        description: The ID of the template to retrieve
  /templates:
    post:
      summary: ''
      operationId: create-template
      description: Create a new template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
      parameters:
        - $ref: '#/components/parameters/TenantID'
    get:
      summary: ''
      operationId: get-all-templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
                  x-stoplight:
                    id: q71vcw5q3i4pv
      parameters:
        - $ref: '#/components/parameters/TenantID'
      description: Get all of the Templates in the system.
components:
  schemas:
    Template:
      title: Template
      x-stoplight:
        id: j8cx7yix0y9y2
      type: object
      x-class-extra-annotation: '@jakarta.persistence.Entity'
      description: Standard model of a template.
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          x-field-extra-annotation: '@jakarta.persistence.Id @jakarta.persistence.GeneratedValue(strategy=jakarta.persistence.GenerationType.AUTO)'
        name:
          type: string
          x-stoplight:
            id: ta9nckeguj46s
        content:
          type: string
          x-stoplight:
            id: c7ka58rc34x9p
      required:
        - name
        - content
  parameters:
    TenantID:
      name: Tenant-ID
      in: header
      required: true
      schema:
        type: string
      description: The Tenant Id for the client.
